<h3>Numbering Threaded Comments</h3>

<div class="gtcn_aside">
<h4>Updates on Greg's WordPress Plugins</h4>
<p>You can keep up on the latest plugin announcements and tutorials by visiting <a href="http://counsellingresource.com/features/tag/wordpress-plugins/">Greg's WordPress Plugins</a>.</p>
</div>

<p>Please also see the README file distributed with this plugin, and for details on how to wrap the following functions in conditionals so your theme will only rely on this plugin when it is activated, please see the plugin page at: <a href="http://counsellingresource.com/features/2009/01/27/threaded-comment-numbering-plugin-for-wordpress/">Greg's Threaded Comment Numbering plugin</a>.</p>

<h4>Basic Usage</h4>
<p>Replace <code>wp_list_comments()</code> in your theme's <code>comments.php</code> file with <code>wp_list_comments('callback=gtcn_basic_callback')</code>.</p>

<p>Please note that if you decide to use the basic callback function included with the plugin, and you are using anything other than the default theme, the styling of your comments <em>almost certainly will change as a result</em>. Why? Because taking advantage of all the new comment features introduced in WordPress 2.7 <em>requires</em> the use of a callback function, and replacing the one you have with the bundled basic callback function (or adding one where there wasn't one before) means replacing whatever existing structure and style you already have in place. If you're using the WordPress default theme, the two will coincide, so you won't see any difference -- but with other themes employing their own structure, they will not.</p>

<p>This fact is 1) unavoidable and 2) straightforward to overcome. It is unavoidable because this is how WordPress handles comments as of version 2.7 and later. It is straightforward to overcome because anyone can create their own callback function, as detailed under 'Advanced Usage'.</p>

<p><em>(Please do not contact me to report that using the basic callback function has changed the styling of your blog's comments!)</em></p>

<h4>Advanced Usage</h4>
<p>Create your own callback function to display comments how you would like them (perhaps using the included basic callback function as a starting point), and insert <code>echo gtcn_comment_numbering($comment->comment_ID, $args)</code> within the callback function wherever you would like the comment number to appear. For custom styling, the function can also take an optional third parameter which defines the <code>class</code> of the <code>div</code> used to wrap the comment number. The default class is <code>commentnumber</code></p>

<p>The usual place to store your own callback function is in your theme's <code>functions.php</code> file. Just give the function a unique name, and reference <em>it</em> -- rather than the included basic callback function -- when your theme calls <code>wp_list_comments()</code>, like so:</p>

<p><code>wp_list_comments('callback=my_uniquely_named_callback_function')</code></p>

<p>The procedure is described in more detail in the WordPress documentation here:</p>

<p><a href="http://codex.wordpress.org/Template_Tags/wp_list_comments">WordPress wp_list_comments documentation</a></p>

<h3>Built-In Theme Support for Comment Numbering</h3>

<p>Please consider asking your theme developer to support this plugin out of the box: with the addition of just a single line of code, most themes can be ready to display hierarchical comment numbering as soon as this plugin is activated!</p>

<h3>Fine Print</h3>

<p class="gtcn_fine_print">This program is free software. You can redistribute it and/or modify it under the terms of the GNU General Public License version 3 as published by the Free Software Foundation.</p>
<p class="gtcn_fine_print">This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY -- without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</p>
